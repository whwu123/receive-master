<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.InsuranceCompanyMapper">
    
    <resultMap type="InsuranceCompany" id="InsuranceCompanyResult">
        <result property="id"    column="id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="companyName"    column="company_name"    />
        <result property="companyType"    column="company_type"    />
        <result property="sort"    column="sort"    />
        <result property="state"    column="state"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectInsuranceCompanyVo">
        select id, create_by, create_time, update_by, update_time, company_name, company_type, sort, state, remark from insurance_company
    </sql>

    <select id="selectInsuranceCompanyList" parameterType="InsuranceCompany" resultMap="InsuranceCompanyResult">
        <include refid="selectInsuranceCompanyVo"/>
        <where>
            1=1
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="companyName != null  and companyName != ''"> and company_name like concat('%', #{companyName}, '%')</if>
            <if test="companyType != null "> and company_type = #{companyType}</if>
            <if test="state != null "> and state = #{state}</if>
            ORDER BY company_type,sort asc
        </where>

    </select>
    
    <select id="selectInsuranceCompanyById" parameterType="Long" resultMap="InsuranceCompanyResult">
        <include refid="selectInsuranceCompanyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertInsuranceCompany" parameterType="InsuranceCompany" useGeneratedKeys="true" keyProperty="id">
        insert into insurance_company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="companyName != null and companyName != ''">company_name,</if>
            <if test="companyType != null">company_type,</if>
            <if test="sort != null">sort,</if>
            <if test="state != null">state,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="companyName != null and companyName != ''">#{companyName},</if>
            <if test="companyType != null">#{companyType},</if>
            <if test="sort != null">#{sort},</if>
            <if test="state != null">#{state},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateInsuranceCompany" parameterType="InsuranceCompany">
        update insurance_company
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="companyName != null and companyName != ''">company_name = #{companyName},</if>
            <if test="companyType != null">company_type = #{companyType},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="state != null">state = #{state},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteInsuranceCompanyById" parameterType="Long">
        delete from insurance_company where id = #{id}
    </delete>

    <delete id="deleteInsuranceCompanyByIds" parameterType="String">
        delete from insurance_company where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>